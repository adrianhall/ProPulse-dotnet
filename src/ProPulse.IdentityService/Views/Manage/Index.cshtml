@model PaginatedList<UserViewModel>
@using ProPulse.IdentityService.ViewModels.ManageViewModels

@{
    ViewData["Title"] = "User Management";
}

<div class="container">
    <h2>@ViewData["Title"]</h2>
    
    @if (TempData["StatusMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["StatusMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-3">
        <div class="col">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" name="searchString" value="@ViewBag.SearchString" class="form-control" placeholder="Search by username, email or display name...">
                        <button class="btn btn-outline-secondary" type="submit">Search</button>
                        @if (!string.IsNullOrEmpty(ViewBag.SearchString))
                        {
                            <a asp-action="Index" class="btn btn-outline-secondary">Clear</a>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Display Name</th>
                    <th>Email Confirmed</th>
                    <th>Roles</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Items)
                {
                    <tr>
                        <td>@user.UserName</td>
                        <td>@user.Email</td>
                        <td>@user.DisplayName</td>
                        <td>
                            @if (user.EmailConfirmed)
                            {
                                <span class="badge bg-success">Yes</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">No</span>
                            }
                        </td>
                        <td>
                            @foreach (var role in user.Roles)
                            {
                                <span class="badge bg-primary me-1">@role</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-primary">Edit</a>
                                <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-sm btn-danger">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <div class="d-flex justify-content-between align-items-center">
        <div>
            Showing @Model.Items.Count of @Model.TotalItems users
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a asp-action="Index" 
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-searchString="@ViewBag.SearchString"
                       class="page-link @prevDisabled">
                        Previous
                    </a>
                </li>
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a asp-action="Index" 
                           asp-route-pageNumber="@i"
                           asp-route-searchString="@ViewBag.SearchString"
                           class="page-link">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item @nextDisabled">
                    <a asp-action="Index" 
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-searchString="@ViewBag.SearchString"
                       class="page-link @nextDisabled">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>